variables:
  GATE_SOLUTION_NAME: "Wally.CleanArchitecture.ApiGateway"
  SERVICE_SOLUTION_NAME: "Wally.CleanArchitecture.MicroService"
  TPL_PROJECT_NAME: "Wally.CleanArchitecture.Template"
  NPM_PROJECT_NAME: "Wally.CleanArchitecture.MicroService.Application.Contracts"
  #
  VERSION: "1.3.${CI_PIPELINE_ID}"
  #CI_DEBUG_TRACE: "true"

stages:
  - build
  - test
  - publish
  - deploy

build:gate_sln:
  extends:
    - .build:dotnet
  variables:
    SOLUTION_NAME: ${GATE_SOLUTION_NAME}

build:service_sln:
  extends:
    - .build:dotnet
  variables:
    SOLUTION_NAME: ${SERVICE_SOLUTION_NAME}

build:tpl:
  extends:
    - .build:dotnet
  variables:
    SOLUTION_NAME: ${TPL_PROJECT_NAME}

test:gate_sln:
  extends:
    - .test:dotnet
  needs:
    - build:gate_sln
  variables:
    SOLUTION_NAME: ${GATE_SOLUTION_NAME}

test:service_sln:
  extends:
    - .test:dotnet
  needs:
    - build:service_sln
  variables:
    SOLUTION_NAME: ${SERVICE_SOLUTION_NAME}

test:npm:
  extends:
    - .test:node
  needs:
    - build:service_sln
  variables:
    PROJECT_NAME: ${SERVICE_SOLUTION_NAME}/${NPM_PROJECT_NAME}/generated
  allow_failure: true

publish:tpl:
  extends:
    - .publish:nuget
  needs:
    - build:tpl
    - test:gate_sln
    - test:service_sln
  variables:
    GIT_SUBMODULE_STRATEGY: recursive
    GIT_STRATEGY: fetch
    GIT_CHECKOUT: "true"
    GIT_DEPTH: 1 
    SOLUTION_NAME: ${TPL_PROJECT_NAME}
    PROJECT_NAME: ${TPL_PROJECT_NAME}

deploy:nuget:tpl:
  extends:
    - .deploy:nuget
  needs:
    - publish:tpl
  variables:
    SOLUTION_NAME: ${TPL_PROJECT_NAME}
    PROJECT_NAME: ${TPL_PROJECT_NAME}
  environment:
    name: ${ENV}_${TPL_PROJECT_NAME}
    url: https://www.nuget.org/packages/${TPL_PROJECT_NAME}/${VERSION}

deploy:baget:tpl:
  extends:
    - .deploy:baget
  needs:
    #- publish:tpl
    - test:gate_sln
    - test:service_sln
  variables:
    PROJECT_NAME: ${TPL_PROJECT_NAME}

deploy:node:npm:
  extends:
    - .deploy:node
  needs:
    - test:npm
  variables:
    SOLUTION_NAME: ${SERVICE_SOLUTION_NAME}
    PROJECT_NAME: ${NPM_PROJECT_NAME}/generated
  environment:
    name: ${ENV}_${NPM_PROJECT_NAME}
    url: https://www.npmjs.com/package/${NPM_PROJECT_NAME}/v/${VERSION}

include:
  - project: wally/wally.common.pipelines
    ref: master
    file:
      - /src/gitlab-ci.yml
